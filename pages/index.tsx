import type { NextPage } from 'next';
import React, { useState } from 'react';
import Head from 'next/head';
import Container from '@mui/material/Container';
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import Typography from '@mui/material/Typography';
import InputAdornment from '@mui/material/InputAdornment';

const Home: NextPage = () => {
  const [investmentAmount, setInvestmentAmount] = useState<string>(String(10000));
  const [interestRate, setInterestRate] = useState<string>(String(0.1));
  const [investmentYears, setInvestmentYears] = useState<string>(String(1));
  const [totalInvestment, setTotalInvestment] = useState<number>(0);
  const [totalProfit, setTotalProfit] = useState<number>(0);
  const [total, setTotal] = useState<number>(0);

  const calculate = (e: React.SyntheticEvent) => {
    e.preventDefault();

    let _total = +investmentAmount;
    let _totalInvestment = 0;
    
    for (let index = 0; index < +investmentYears; index++) {
      _total += (_total * +interestRate);
      if (index > 0) _total += +investmentAmount;
      _totalInvestment += +investmentAmount;
    }

    setTotal(_total);
    setTotalInvestment(_totalInvestment);
    setTotalProfit(_total - _totalInvestment);
  };

  const annualProfid = (_investmentAmount: number, _interestRate: number) => {
    const profit = _investmentAmount * _interestRate;
    const total = profit + _investmentAmount;
    return {
      profit,
      total
    }
  }

  return (
    <div>
      <Head>
        <title>Hola</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Container maxWidth={'sm'} sx={{ py: 4 }}>
        <Box
          sx={{
            display: 'flex',
            flexDirection: 'column',
            gap: '1rem',
            mb: '2rem',
          }}
          component='form'
          noValidate
          autoComplete='off'
          onSubmit={calculate}
        >
          <Typography variant='h4' component='h1' align='center'>
            Calculadora de ganancias
          </Typography>
          <TextField
            id='outlined-basic'
            label='Inversión Anual'
            variant='outlined'
            type='number'
            value={investmentAmount}
            onChange={(e) => setInvestmentAmount(e.target.value)}
            InputProps={{
              startAdornment: <InputAdornment position="start">$</InputAdornment>,
            }}
          />
          <TextField
            id='outlined-basic'
            label='Interés Anual'
            variant='outlined'
            type='number'
            value={interestRate ? (+interestRate * 100) : ''}
            onChange={(e) => setInterestRate(e.target.value ? String(+e.target.value / 100) : '')}
            InputProps={{
              startAdornment: <InputAdornment position="start">%</InputAdornment>,
            }}
          />
          <TextField
            id='outlined-basic'
            label='Años de Inversión'
            variant='outlined'
            type='number'
            value={investmentYears}
            onChange={(e) => setInvestmentYears(e.target.value)}
          />
          <Button type='submit' variant='contained' fullWidth>
            Calcular
          </Button>
        </Box>
        <Box
          sx={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}
          component='form'
          noValidate
          autoComplete='off'
        >

          <Typography variant='body1' component='p'>
            Inversión total: $ {totalInvestment}
          </Typography>
          <Typography variant='body1' component='p'>
            Ganacia total: $ {totalProfit}
          </Typography>

          <Typography variant='body1' component='p'>
            Total: $ {total}
          </Typography>
        </Box>
      </Container>
    </div>
  );
};

export default Home;
